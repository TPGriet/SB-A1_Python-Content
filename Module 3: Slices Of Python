1. Write a Python Program to Create a new string made up of First 2 and
Last 2 Characters of the given string
TEST CASES:
---------------------------
case = t1
Fail message="OOPS you picked a wrong slice, try again!!"
input=ARUNKUMAR
output=ARAR

case = t1
input=GRIET
output=GRET

PROGRAM:
-----------------------
string=input()
new=string[0:2]+string[-2:]
print(new)

2. As u guys know Allu Arjun and Sneha Reddy are married for a long time. 
Sneha Reddy now wants to update her twitter name as: Sneha Allu Reddy. Write a python program to do the same.
Note: use only string slicing method.
TEST CASES:
-------------------
case = t1
input=ALLU ARJUN
SNEHA REDDY
output=SNEHA ALLU REDDY

case = t2
input=ARUN KONGI
VIKS GAUR
output=VIKS ARUN GAUR

case = t3
input=Sourabh Sharma
Parveen Shah
output=Parveen Sourabh Shah

PROGRAM:
-------------------------
'''s1=input()
s2=input()
i1=s1.find(" ")
i2=s2.find(" ")
s4=s2[:i2]+" "+s1[:i1]+s2[i2:]
print(s4)
fn1,ln1=input().split()
fn2,ln2=input().split()
print(fn2,fn1,ln2)
'''
first_name = input()
last_name = input()

# Find the index to split the last name
i1=first_name.index(" ")
i2=last_name.index(" ")

# Create the updated name
updated_name = last_name[:i2] + " " + first_name[:i1] + " " + last_name[i2:]

# Print the updated name
print(updated_name)

3. Write a python program to create a string made of the middle three characters
TEST CASES:
-----------------
case=t1
input=ARUNKUMAR
output="Middle three chars are:NKU"

case=t2
input=Arsenal@1234
output="Middle three chars are:al@"

case=t3
input=password#Griet
output="Middle three chars are:rd#"

PROGRAM:
--------------------------
def middle(str1):

   mi = int(len(str1) // 2)
   res = str1[mi - 1:mi + 2]
   print("Middle three chars are:"+res)

var=input()
middle(var)

4. Ask the user to enter a string and remove first 'n' characters from it
TEST CASES:
----------------------
case=t1
input=ANILKUMAR 4
output=KUMAR

case=t2
input=Arsenal@1234 8
output=1234

case=t3
input=GRIET@Hyderabad 6
output=Hyderabad

PROGRAM:
----------------------
def remove_chars(word, n):
    x = word[n:]
    return x


a,b=input().split()
b=int(b)
c=remove_chars(a,b)
print(c)

5. Enter a string and count number of times substring is repeated in it

TEST CASES:
--------------------------
case=t1
input=Fear leads to anger; anger leads to hatred; hatred leads to conflict; conflict leads to suffering
leads
output=leads repeated 4 times

case=t2
input=It rained on his lousy tombstone, and it rained on the grass on his stomach. It rained all over the place
It rained
output=It rained repeated 2 times

PROGRAM:
-----------------------
def count(statement,s1):
    count = 0
    le=len(s1)
    for i in range(len(statement) - 1):
        count += statement[i:i+le] == s1
    return count

var=input()
s1=input()
count=count(var,s1)
print("{} repeated {} times".format(s1,count))

6. Check if a given string is palindrome not (Note: Don't use any inbuilt functions).
 Use only slicing concept.
 String strip() is an inbuilt function in the Python programming language that returns a copy of the string 
 with both leading and trailing characters removed (based on the string argument passed).

TEST CASES:
-------------------
case=t1
input= madam 
output=madam is a palindrome 

case=t2
input=Taste  
output=Taste is not a palindrome

case=t3
input= malayalam 
output=malayalam is a palindrome 

case=t4
input= abc@abc 
output=abc@abc is not a palindrome 

case=t5
input= pqr#rqp 
output=pqr#rqp is a palindrome 

PROGRAM:
--------------------------
str = input().strip()
if(str==str[::-1]):  #[::-1]  end to beginning, counting down by 1

    print(str,'is a palindrome')
else:
    print(str,'is not a palindrome')

7. Convert the first 'n' characters to uppercase letters in a given string (Using Slicing method only)
and print the updated string. 
Note: Read string and n characters on the same line.
TEST CASES:
-----------------
case=t1
input=arsenalgunners 6
output=ARSENALgunners

case=t2
input=grietpython 5
output=GRIETpython

PROGRAM:
----------------------
str,n=input().split()
n=int(n)
print(str[:n].upper() + str[n:])

8. A secret vehicle code is generated by the following steps:

1. Extracting the first 2 letters from the name
2. Converting the 2 letters to uppercase
3. Join the 2 letters with the last 3 letters

For a given vehicle_name, generate and print the secret code
TEST CASES:
------------------------
case=t1
input=niaLmPythonProgRammerhvvdvkjhoillhdsiolksdluvsdkjhlkdiufdjkkvdsoajckvuskcnkjasdvkknkdfjnja
output=NInja

case=t2
input=grietpython
output=GRhon

case=t3
input=trodoudoiupossudgcramp
output=TRamp

case=t4
input=apdteftfedtf6354
output=AP354

case=t5
input=1232python
output="Invalid Vehicle Code"


PROGRAM:
----------------------------
vehicle_name=input()
s=(vehicle_name[:2]).upper()
s1=vehicle_name[-3:]
if(s.isdigit()):
    print("Invalid Vehicle Code")
else:    
    print(s+s1)
